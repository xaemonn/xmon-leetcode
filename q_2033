 Problem Statement:  https://leetcode.com/problems/minimum-operations-to-make-a-uni-value-grid/


class Solution {
public:
    int minOperations(vector<vector<int>>& grid, int x) {
        vector<int> v;
        int m=grid.size(); int n=grid[0].size();
        for(int i=0; i<m;i++){
             for(int j=0; j<n;j++){
                v.push_back(grid[i][j]);
             }
        }

        sort(v.begin(),v.end());

        
        int sz=v.size();
          int mod=v[0]%x;
        for(int i=1; i<sz;i++){
            if(v[i]%x!=mod){
                return -1;
            }
        }
        int num=v[sz/2];

        int sum=0;

        for(int i=0; i<sz;i++){
              int val=abs(v[i]-num);
              sum+=(val/x);
        }

        return sum;
    }
};
